@model challenges.Models.Challenge

@{
    ViewData["Title"] = "Edit";
    var userId = User.Claims.Single(c => c.Type == "sub").Value;
    var isAdminOrCoordinator = User.HasClaim("user_type", "administrator") || User.HasClaim("user_type", "coordinator");
}

<h2>Edit</h2>

<h4>Challenge</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ChallengeId" />
            <div class="form-group">
                <label asp-for="StartDateTime" class="control-label"></label>
                <input asp-for="StartDateTime" class="form-control" />
                <span asp-validation-for="StartDateTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDateTime" class="control-label"></label>
                <input asp-for="EndDateTime" class="form-control" />
                <span asp-validation-for="EndDateTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ActivityId" class="control-label"></label>
                <select asp-for="ActivityId" class="form-control" asp-items="ViewBag.ActivityId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Goal" class="control-label"></label>
                <input asp-for="Goal" class="form-control" />
                <span asp-validation-for="Goal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="GoalMetric" class="control-label"></label>
                <select asp-for="GoalMetric" class="form-control" asp-items="ViewBag.GoalMetric"></select>
            </div>
            @if (isAdminOrCoordinator)
            {
                <div class="form-group">
                    <div class="checkbox">
                        <label>
                            <input asp-for="isGroupChallenge" /> @Html.DisplayNameFor(model => model.isGroupChallenge)
                            <span asp-validation-for="isGroupChallenge" class="text-danger"></span>
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Groupid" class="control-label"></label>
                    <select asp-for="Groupid" class="form-control" asp-items="ViewBag.Groupid"></select>
                </div>
            }
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="Repeat" /> @Html.DisplayNameFor(model => model.Repeat)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
